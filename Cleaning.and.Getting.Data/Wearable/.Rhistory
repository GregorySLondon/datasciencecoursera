install.packages(KernSmooth)
search
install.packages("KernSmooth")
library(KernSmooth)
exit
q()
install.packages("swirl")
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list,class)
cls_vect<-sapply(flags,class)
cls
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
saaply(flag_colors,mean)
sappl(flag_colors,mean)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes)
lapply(flag_shapes,range)
sappl(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem)elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
nqmes(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=F)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),100,prob=c(0.3,0.7))
flips<-sample(100,c(0,1),prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips[1])
sum(flips)
?rbinom
rbinom(1,size=100,prob=0,7)
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,100,prob=0.7)
flips2<-rbinom(100,1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date
d1<-Sys.Date5
d1<-Sys.Date5()
d1<-Sys.Date()
class(d1)
unclass(d1)
d&
1
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(tÃ©))
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986"
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(cars$dist,cars$speed)
?plot
plot(x=car$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance",main="My Plot")
plot(cars,main="My Plot")
?plot
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
data(mtcars)
?boxplot
boxplot(mtcars,mpg ~ cyl)
boxplot(formula=mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
q()
$ update-alternatives --config java
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
Files <- download.file(url, destfile = "/Users/gregorysollmeyer/Desktop/Coursera/getdata.for")
Files <- download.file(url, destfile = "/Users/gregorysollmeyer/Desktop/Coursera/getdata.for", method = "curl")
> data <- read.csv("/Users/gregorysollmeyer/Desktop/Coursera/getdata.for", header = TRUE)
> file_name <- "./getdata-wksst8110.for"
> df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
> sum(df[, 4])
> [1] 32426.7
data <- read.csv("/Users/gregorysollmeyer/Desktop/Coursera/getdata.for", header = TRUE)
file_name <- "./getdata-wksst8110.for"
df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
sum(df[, 4])
data <- read.csv("/Users/gregorysollmeyer/Desktop/Coursera/getdata.for", header = TRUE)
file_name <- "./getdata.for"
df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
file_name <- "/Users/gregorysollmeyer/Desktop/Coursera/getdata.for"
df <- read.fwf(file=file_name,widths=c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
sum(df[, 4])
getwd()
setwd("/Users/gregorysollmeyer/Desktop/Coursera")
File <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
Data <- download.file(File, destfile = "/Users/gregorysollmeyer/Desktop/Coursera/MicroData.csv", method = "curl")
Micro <- read.csv(data)
Micro <- read.csv("/Users/gregorysollmeyer/Desktop/Coursera/MicroData.csv")
str(Micro)
install.packages("dplyr")
library(dplyr)
Micro1 <- select(Micro,ACR,AGS)
Micro1$ACR > 2
Micro1$ACR > 2 & Micro1$AGS > 5
agricultureLogical <- Micro1$ACR > 2 & Micro1$AGS > 5
which(agricultureLogical)
File2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
Data2 <- download.file(File2, destfile = destfile = "/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg", method = "curl"))
Data2 <- download.file(File2, destfile = destfile = "/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg", method = "curl")
Data2 <- download.file(File2, destfile = "/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg", method = "curl")
install.packages("jpeg")
library(jpeg)
Jeff <- readJPEG("/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg", Native =TRUE)
readJPEG("/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg")
readJPEG("/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg", native =TRUE)
Jeff <- readJPEG("/Users/gregorysollmeyer/Desktop/Coursera/Jeff.jpg", native =TRUE)
quantile(Jeff, probs = seq(0,3,0,8))
quantile(Jeff, probs = seq(0.3,0.8))
quantile(Jeff, probs = seq(0.3,0.8), na.rm=TRUE)
quantile(Jeff, probs = seq(,0.8), na.rm=TRUE)
quantile(Jeff, probs = seq(0.8), na.rm=TRUE)
quantile(Jeff, probs = c(0.3,0.8), na.rm=TRUE)
File3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
Data3 <- download.file(File3, destfile = "/Users/gregorysollmeyer/Desktop/Coursera/GDP.csv", method = "curl")
GDP <- read.csv("/Users/gregorysollmeyer/Desktop/Coursera/GDP.csv")
View(GDP)
names(GDP)
GDP2 <- select(GDP,X,Gross.domestic.product.2012)
GDP3 <- filter(GDP2,5:194)
GDP3 <- GDP2[5:194,]
View(GDP3)
unique(GDP3$Gross.domestic.product.2012)
GDP3 <- filter(GDP3,X,Gross.domestic.product.2012)
GDP3 <- GDP2[5:194,]
GDP3 <- select(GDP3,X,Gross.domestic.product.2012)
View(GDP3)
GDP3 <- arrange(GDP3,desc(Gross.domestic.product.2012))
View(GDP3)
GDP3 <- GDP2[5:194,]
View(GDP3)
rm(list=ls())
File1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
File2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(File1, destfile = "~/Desktop/Coursera/GDP.csv", method = "curl")
download.file(File2, destfile = "~/Desktop/Coursera/FEDCountry.csv", method = "curl")
GDP <- read.csv("~/Desktop/Coursera/GDP.csv", skip = 4, stringAsFactors = FALSE)
GDP <- read.csv("~/Desktop/Coursera/GDP.csv", skip = 4, stringsAsFactors = FALSE)
View(GDP)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
GDP <- select(GDP,X,X.1)
View(GDP)
GDP <- rename(GDP, Code = X, GDP.Rank = X.1)
View(GDP)
GDP <- GDP[GDP$Code !="",]
View(GDP)
GDP <- GDP[GDP$GDP.Rank !="",]
View(GDP)
GDP[,2] <- as.numeric(GDP[,2])
View(GDP)
arrange(GDP,desc(GDP.Rank))
GDP <- arrange(GDP,desc(GDP.Rank))
View(GDP)
GDP[13,]
unique(GDP$GDP.Rank)
GDP <- read.csv("~/Desktop/Coursera/GDP.csv", skip = 4, stringsAsFactors = FALSE)
View(GDP)
GDP <- rename(GDP, Code = X, Rank = X.1, Country = X.3, GDP = X.4)
GDP <- select(GDP, Code, Rank, Country, GDP)
View(GDP)
GDP[,Rank] <- as.numeric(GDP[,Rank])
GDP[,"Rank"] <- as.numeric(GDP[,"Rank"])
GDP <- read.csv("~/Desktop/Coursera/GDP.csv", skip = 4, stringsAsFactors = FALSE)
GDP <- rename(GDP, Code = X, Rank = X.1, Country = X.3, GDP = X.4)
GDP <- select(GDP, Code, Rank, Country, GDP)
GDP <- GDP[1:190,]
FED.Country <- read.csv("~/Desktop/Coursera/FEDCountry.csv", stringsAsFactors = FALSE)
View(FED.Country)
FED.Country <- rename(FED.Country, Code = CountryCode)
View(FED.Country)
Matrix <- arrange(join(GDP,FED.Country),Code)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
Matrix <- arrange(join(GDP,FED.Country),Code)
View(Matrix)
Matrix <- select(Matrix,c(Code:GDP,Income.Group))
View(Matrix)
Matrix[,"Rank"] <- as.numeric(Matrix[,Rank])
Matrix[,"Rank"] <- as.numeric(Matrix[,"Rank"])
Matrix[,"GDP"] <- as.numeric(Matrix[,"GDP"])
View(Matrix)
Matrix <- arrange(join(GDP,FED.Country),Code)
Matrix <- select(Matrix,c(Code:GDP,Income.Group))
Matrix[,"Rank"] <- as.numeric(Matrix[,Rank])
Matrix[,"Rank"] <- as.numeric(Matrix[,"Rank"])
View(Matrix)
Matrix[,"GDP"] <- gsub(",","",Matrix[,"GDP"])
View(Matrix)
Matrix[,"GDP"] <- as.numeric(Matrix[,"GDP"])
View(Matrix)
mean(Matrix[Matrix$Income.Group=="High income: nonOECD"),]$GDP
mean(Matrix[Matrix$Income.Group=="High income: nonOECD",]$GDP
)
summarise_?
)
?summarise
mean(Matrix[Matrix$Income.Group=="High income: nonOECD",]$GDP
)
mean(Matrix[Matrix$Income.Group=="High income: nonOECD",]$Rank)
summarise(Matrix,Income.Group)
summarise(Matrix,Income.Group,mean(GDP))
?aggregate
aggregate(Matrix)
aggregate(Matrix,Income.Group)
aggregate(Matrix,GDP ~ Income.Group,mean)
aggregate(GDP ~ Income.Group,Matrix,mean)
aggregate(Rank ~ Income.Group,Matrix,mean)
if(!file.exist("./Wearable")){dir.creat("./Wearable")}
if(!file.exists("./Wearable")){dir.creat("./Wearable")}
if(!file.exists("./Wearable")){dir.create("./Wearable")}
if(!file.exists("./Wearable")){dir.create("./Wearable")}
Zip.File <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(Zip.File, destfile = "~/Desktop/Coursera/Wearable.zip", method = "curl")
if(!file.exists("./Wearable")){dir.create("./Wearable")}
Zip.File <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(Zip.File, destfile = "~/Desktop/Coursera/Wearable/Wearable.zip", method = "curl")
unzip ("~/Desktop/Coursera/Wearable/Wearable.zip", exdir = "./Wearable")
rm(list =ls())
Test <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/test/X_test.txt", header = FALSE, sep = "")
Test[,562] <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/test/Y_test.txt", header = FALSE, sep = "")
Test[,563] <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/test/subject_test.txt", header = FALSE, sep = "")
Train <- read.table("~/Desktop/CGit/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/train/X_train.txt", header = FALSE, sep = "")
Train[,562] <- read.table("~/Desktop/CGit/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/train/Y_train.txt", header = FALSE, sep = "")
Train[,563] <- read.table("~/Desktop/CGit/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/train/subject_train.txt", header = FALSE, sep = "")
Labels <- read.table("~/Desktop/CGit/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/activity_labels.txt", header = FALSE, sep = "")
Test <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/test/X_test.txt", header = FALSE, sep = "")
Test[,562] <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/test/y_test.txt", header = FALSE, sep = "")
Test[,563] <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/test/subject_test.txt", header = FALSE, sep = "")
Train <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/train/X_train.txt", header = FALSE, sep = "")
Train[,562] <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/train/y_train.txt", header = FALSE, sep = "")
Train[,563] <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/train/subject_train.txt", header = FALSE, sep = "")
Labels <- read.table("~/Desktop/CGit/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/activity_labels.txt", header = FALSE, sep = "")
Features <- read.table("~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/UCI HAR Dataset/features.txt", header = FALSE, sep = "")
View(Features)
View(Features)
class(Test)
Test2 <- Test
colnames(Test2) <- Features[,2]
View(Test2)
rm(Test2)
colnames(Test) <- Features[,2]
colnames(Train) <- Features[,2]
View(Test)
View(Test)
Test2 <- Test
colnames(Test2[,562]) <- "Labels"
library(dplyr)
colnames(Test2)[562] <- "Labels"
rm(Test2)
Data <- rbind(Test,Train)
View(Data)
Test <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/test/X_test.txt", header = FALSE, sep = "")
Test[,562] <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/test/y_test.txt", header = FALSE, sep = "")
Test[,563] <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/test/subject_test.txt", header = FALSE, sep = "")
Train <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/train/X_train.txt", header = FALSE, sep="")
Train[,562] <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/train/y_train.txt", header = FALSE, sep="")
Train[,563] <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/train/subject_train.txt", header = FALSE, sep="")
Final.Data <- rbind(Test,Train)
Features <- read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/features.txt", header = FALSE, sep="")
colnames(Final.Data) <- Features[,2]
identical(Data,Final.Data)
source('~/Desktop/Coursera/Wearable/run.analysis.R')
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
rm(Final.Data)
Relevant.Features <- Features[,grepl("mean|std",Features[,2]]
Relevant.Features <- Features[,grepl("mean|std",Features[,2])]
Relevant.Features <- Features[grepl("mean|std",Features[,2])]
Relevant.Features <- Features[,grepl("mean|std",Features)][,2]
library(dplyr)
Relevant.Features <- filter(Features[,2],"mean|std")
Relevant.Features <- filter(Features,"mean|std")
View(Features)
Rel.Features <- Features[,grepl("mean|std", names(Features))]
View(Rel.Features)
Rel.Features <- Features[,grepl("mean|std\\", names(Features))]
Rel.Features <- Features[,grepl("mean|std\\", names(Features))]
Rel.Features <- subset(Features, grepl("mean|std", Features))[, 2]
Rel.Features <- Features[] grepl("mean|std", Features))[, 2]
Rel.Features <- Features[] grepl("mean|std", Features))[, 2]
Rel.Features <- Features[ grepl("mean|std", Features)][, 2]
Rel.features <- select(Data, contains("mean|std"))
Rel.features <- select(Data, contains("mean()|std()"))
Rel.features <- select(Data, contains("mean()")|contains("std()"))
Rel.features <- select(Data, contains("mean()")
)
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
Rel.Features <- Features[,grepl("mean", colnames(Features))]
Rel.Features <- Data[,grepl("mean", colnames(Data))]
Rel.Features <- Data[,grepl("mean|std", colnames(Data))]
Activity.Labels <-read.table("~/Desktop/Coursera/Wearable/UCI HAR Dataset/activity_labels.txt", header = FALSE, sep="")
View(Activity.Labels)
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
rm(Rel.features)
rm(Rel.Features)
rm(Relevant.Features)
View(Relevant.Features.Data)
str(Relevant.Features.Data)
Activity.Data <- sapply(Data$Activity.ID, function(x) Activity.Labels[x,2])
Data$Activity.ID <- sapply(Data$Activity.ID, function(x) Activity.Labels[x,2])
Relevant.Features.Data <- Data[,grepl("mean|std|Activity.ID|Subjects",colnames(Data))]
Rel.Fea.Data <- Data[,grepl("mean|std|Activity.ID|Subjects",colnames(Data))]
Rel.Fea.Data$Activity.ID <- sapply(Rel.Fea.Data$Activity.ID, function(x) Activity.Labels[x,2])
str(Rel.Fea.Data)
View(Test)
names(Rel.Fea.Data) <- gsub("t","Time ",names(Rel.Fea.Data))
View(Rel.Fea.Data)
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
View(Data.Final)
View(Data)
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
View(Data.Final)
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
View(Data.Final)
Data.Final.Average <- data.table(Data.Final)
library(data.table)
Data.Final.Average <- data.table(Data.Final)
Data.Final.Average <- aggregate(Data.Final.Average, c(Activity.ID,Subjects), mean)
Data.Final.Average <- aggregate(Data.Final.Average, Activity.ID & Subjects, mean)
View(Data.Final.Average)
Data.Final.Average <- aggregate(Data.Final.Average, list(Activity.ID,Subjects), mean)
Data.Final.Average <- aggregate(Data.Final.Average, "Activity.ID" & "Subjects", mean)
Data.Final.Average <- aggregate(Data.Final.Average, c("Activity.ID", "Subjects"), mean)
Data.Final.Average <- aggregate(Data.Final.Average, list("Activity.ID", "Subjects"), mean)
Data.Final.Average <- aggregate(Data.Final.Average, "Activity.ID", mean)
Data.Final.Average <- aggregate(Data.Final.Average, by = "Activity.ID", mean)
Data.Final.Average <- aggregate(Data.Final.Average, by = list("Activity.ID","Subjects"), mean)
Data.Final.Average %>% group_by("Activity.ID") %>% group_by("Subjects") %>% summarise(mean)
Data.Final.Average %>% group_by("Activity.ID") %>% group_by("Subjects") %>% summarise(mean())
Data.Final.Average %>% group_by("Activity.ID") %>% group_by("Subjects") %>% summarise(mean = mean())
Data.Final.Average %>% group_by("Activity.ID") %>% group_by("Subjects")
aggregate(Subjects~Activity.ID, Data.Final.Average,mean)
summarise_each(Data.Final.Average,funs(mean), Activity.ID, Subjects)
is.na(Data.Final)
summarise_each(Data.Final.Average,funs(mean), Activity.ID, Subjects)
View(Data.Final.Average)
str(Data.Final.Average)
summarise_each(Data.Final.Average,funs(mean, na.rm = TRUE), Activity.ID, Subjects)
summarise_each(Data.Final.Average,funs(mean(., na.rm = TRUE), Activity.ID, Subjects)
)
summarise_each(Data.Final.Average,funs(mean(., na.rm = TRUE), "Activity.ID", "Subjects"))
summarise_each(Data.Final.Average,funs(mean(., na.rm = TRUE)), Activity.ID, Subjects)
aggregate(Data.Final.Average, by = list("Activity.ID","Subject"),mean)
aggregate(Data.Final.Average, by = list("Activity.ID","Subject"),mean())
aggregate(Data.Final.Average, by = list("Activity.ID","Subject"),mean, na.rm = TRUE
)
aggregate(Data.Final.Average, by = list(Activity.ID,Subject),mean, na.rm = TRUE)
Data.Final.Average[, lapply(.SD, mean), by = 'Subjects,Activity.ID']
Data.Final.Average[, lapply(.SD, mean), by = c("Subjects","Activity.ID")]
rm(list = ls())
source('~/Desktop/Git/Cleaning.and.Getting.Data/Wearable/run.analysis.R')
class("Test")
str("Test")
str(Test)
str(Activity.Labels)
View(Data.Final)
